; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

; Platform IO 4.0

[platformio]

default_envs=library

include_dir = $PROJECT_DIR
src_dir = $PROJECT_DIR

;
; shared env
;

[env]
framework = arduino

lib_deps = 
    https://github.com/sascha432/libcrc16.git#1.0.1
    ESP8266WiFi


build_unflags =
    -std=gnu++11
    -O0
    -O1
    -O2
    -O3

build_src_filter =    
    -<.git/> 
    -<.svn/>
    -<../shared/stlext/src/*>
    +<../KFCBaseLibrary/include/*>
    +<../KFCConfiguration/src/*>
    +<../KFCEventScheduler/src/*>
    +<../KFCJson/src/*>
    +<../KFCPinMonitor/src/*>
    +<../KFCResetDetector/src/*>
    +<../KFCRestApi/*>
    +<../KFCWebFramework/include/*>
    +<../stl_ext/include/*>
    +<../shared/*.cpp*>
    -<../KFCBaseLibrary/src/mock/*>
    -<../KFCBaseLibrary/src/VirtualPin/*>
    ; +<../KFCSyslog/include/*>
    ; +<../KFCOpenWeather/src/*>
    ; +<../KFCGfx/src/*>
    ; +<../KFCGfx/src/*>

build_flags =
    -fmax-errors=10
    -std=gnu++17
    -I./
    -I../
    -I./../../include/boost_1_80_0
    -I.//KFCBaseLibrary/include
    -I.//KFCConfiguration/src
    -I.//KFCEventScheduler/src
    -I.//KFCGfx/src
    -I.//KFCJson/src
    -I.//KFCOpenWeather/src
    -I.//KFCPinMonitor/src
    -I.//KFCResetDetector/src
    -I.//KFCResetDetector/include
    -I.//KFCRestApi
    -I.//KFCSyslog/include
    -I.//KFCSyslog/include
    -I.//KFCWebFramework/include
    -I./stl_ext/include
    -I./shared/stlext/include

;
; debug and release to add to the env

[debug]
build_flags = 
    -D DEBUG=1

[release]
build_flags = 
    -D DEBUG=0

;
; device specific settings, using "extends"
;

[esp8266]
platform = espressif8266

board = nodemcu
board_build.flash_mode = dio
board_build.filesystem = littlefs

upload_speed = 921600
upload_protocol = esptool

monitor_speed = 115200
monitor_rts = 0
monitor_dtr = 0

monitor_filters = esp8266_exception_decoder, direct

lib_ignore =
    ${env.lib_ignore}

lib_deps =
    ${env.lib_deps}

build_src_filter =
    ${env.build_src_filter}

build_unflags =
    ${env.build_unflags}

build_flags =
    ${env.build_flags}
    -D ESP8266=1

[esp32]
platform = https://github.com/platformio/platform-espressif32.git#feature/arduino-upstream
platform_packages =
    platformio/tool-mklittlefs @ ~1.203.0
    toolchain-xtensa32 @ ~3.80200.200512
    platformio/framework-arduinoespressif32 @ https://github.com/sascha432/arduino-esp32.git#master

board = esp32dev
board_build.partitions = ./shared/ld/partitions.csv
board_build.filesystem = littlefs
; board_build.flash_mode = qio
board_build.flash_mode = dio

upload_speed = 921600
monitor_speed = 115200
monitor_rts = 0
monitor_dtr = 0

monitor_filters = esp32_exception_decoder, direct

build_src_filter =
    ${env.build_src_filter}

lib_ignore =
    ${env.lib_ignore}
    SPIFFS

lib_deps =
    ${env.lib_deps}
    AsyncTCP
    HTTPClient
    WiFiClientSecure

build_unflags =
    ${env.build_unflags}

build_flags =
    ${env.build_flags}
    -D ESP32=1

;
; custsom environments
;

[env:library]
extends=esp8266

build_type=debug
lib_archive=yes

build_src_filter = 
    ${esp8266.build_src_filter}
    +<./shared/>
    +<./examples/>

build_flags = 
    ${esp8266.build_flags}
    ${debug.build_flags}
    -I./shared
    -I./examples/library
   